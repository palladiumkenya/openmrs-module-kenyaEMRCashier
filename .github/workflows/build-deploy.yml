name: KenyaEMR Cashier CI/CD

on:
  # Manually triggered workflow using the "Run workflow" button
  workflow_dispatch:
  push:
    branches: [master]
    tags:
      - "v*"
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "8"

      - name: Build with Maven
        run: |
          echo "Building project with current version"
          mvn -B clean install 

  publish:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "8"

      - name: Set settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "mks-repo",
              "username": "${{ secrets.MAVEN_USERNAME }}",
              "password": "${{ secrets.MAVEN_TOKEN }}"
            },
            {
              "id": "mks-repo-snapshots",
              "username": "${{ secrets.MAVEN_USERNAME }}",
              "password": "${{ secrets.MAVEN_TOKEN }}"
            }]

      - name: Publish
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "Publishing release version: $VERSION"

            # Check if version already exists in Nexus
            URL="https://nexus.mekomsolutions.net/repository/maven-releases/org/openmrs/module/kenyaemr.cashier/${VERSION}/kenyaemr.cashier-${VERSION}.pom"
            echo "Checking if $URL exists..."

            if curl --silent --head --fail "$URL" > /dev/null; then
              echo "Version $VERSION already exists in Nexus. Skipping publish."
              exit 0
            fi

            mvn versions:set -DnewVersion=$VERSION
            mvn --batch-mode deploy -DskipTests
          else
            echo "Publishing snapshot version"
            mvn --batch-mode deploy -DskipTests
          fi

      - name: Increment Version After Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"

          VERSION=${GITHUB_REF#refs/tags/v}
          IFS='.' read -r major minor patch <<< "$VERSION"
          new_patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$new_patch-SNAPSHOT"

          echo "Current version: $VERSION"
          echo "New version: $NEW_VERSION"

          mvn versions:set -DnewVersion=$NEW_VERSION

          if git diff --quiet; then
            echo "No version changes to commit."
            exit 0
          fi

          # Commit and push changes
          git add pom.xml */pom.xml
          git commit -m "Increment version to $NEW_VERSION [skip ci]"
          git push origin master
