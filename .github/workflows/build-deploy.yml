name: KenyaEMR Cashier CI/CD

on:
  # Manually triggered workflow using the "Run workflow" button
  workflow_dispatch:
  push:
    branches: [master]
    tags:
      - "v*"
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "8"

      - name: Build with Maven
        run: |
          echo "Building project with current version"
          mvn -B clean install -DskipTests

  publish:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "8"

      - name: Set settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "mks-repo",
              "username": "${{ secrets.MAVEN_USERNAME }}",
              "password": "${{ secrets.MAVEN_TOKEN }}"
            },
            {
              "id": "mks-repo-snapshots",
              "username": "${{ secrets.MAVEN_USERNAME }}",
              "password": "${{ secrets.MAVEN_TOKEN }}"
            }]

      - name: Publish
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "Publishing release version: $VERSION"
            
            # Check if version already exists in Nexus
            URL="https://nexus.mekomsolutions.net/repository/maven-releases/org/openmrs/module/kenyaemr.cashier/${VERSION}/kenyaemr.cashier-${VERSION}.pom"
            echo "Checking if $URL exists..."
            
            if curl --silent --head --fail "$URL" > /dev/null 2>&1; then
              echo "Version $VERSION already exists in Nexus. Skipping publish."
              exit 0
            fi
            
            mvn versions:set -DnewVersion=$VERSION
            mvn --batch-mode deploy -DskipTests
          else
            echo "Publishing snapshot version"
            mvn --batch-mode deploy -DskipTests
          fi

      - name: Create PR for Version Increment
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"

          VERSION=${GITHUB_REF#refs/tags/v}

          # Validate version format
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: $VERSION. Expected format: x.y.z"
            exit 1
          fi

          IFS='.' read -r major minor patch <<< "$VERSION"
          new_patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$new_patch-SNAPSHOT"
          BRANCH_NAME="version-increment/v$NEW_VERSION"

          echo "Current version: $VERSION"
          echo "New version: $NEW_VERSION"
          echo "Branch name: $BRANCH_NAME"

          # Fetch master and create new branch from it
          git fetch origin master
          git checkout -b "$BRANCH_NAME" origin/master

          mvn versions:set -DnewVersion=$NEW_VERSION

          if git diff --quiet; then
            echo "No version changes to commit."
            exit 0
          fi

          # Commit changes
          git add .
          git commit -m "Increment version to $NEW_VERSION

          This automated commit increments the version after release $VERSION.

          Changes:
          - Updated version from $VERSION to $NEW_VERSION in all pom.xml files
          - Ready for next development cycle"

          # Push the new branch
          git push origin "$BRANCH_NAME"

          # Create Pull Request using GitHub CLI
          gh pr create \
            --title "ðŸ”„ Increment version to $NEW_VERSION" \
            --body "## Automated Version Increment

          This PR increments the project version after the release of **v$VERSION**.

          ### Changes Made:
          -  Updated version from \`$VERSION\` to \`$NEW_VERSION\` in all pom.xml files
          -  Prepared project for next development cycle

          ### Details:
          - **Previous Version:** $VERSION  
          - **New Version:** $NEW_VERSION
          - **Triggered by:** Tag release \`v$VERSION\`
          - **Generated by:** GitHub Actions workflow

          This is an automated PR that can be safely merged to continue development." \
            --base master \
            --head "$BRANCH_NAME" \
            --label "automated" \
            --label "version-increment"
        env:
          GH_TOKEN: ${{ secrets.PR_TOKEN }}
